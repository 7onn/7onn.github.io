<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>engineering on üìúüßô‚Äç‚ôÇÔ∏è tom's blog</title><link>https://blog.7onn.dev/tags/engineering/</link><description>Recent content in engineering on üìúüßô‚Äç‚ôÇÔ∏è tom's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 02 Feb 2022 10:00:00 -0300</lastBuildDate><atom:link href="https://blog.7onn.dev/tags/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Provisioning</title><link>https://blog.7onn.dev/post/provisioning/</link><pubDate>Wed, 02 Feb 2022 10:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/provisioning/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
Provisioning combines both change management and capacity planning and it must occur quickly and only when necessary, as capacity is expensive.
This exercise must also be done correctly or capacity doesn&amp;rsquo;t work when needed. Adding new capacity often involves spinning up a new instance or location, making significant modification to existing systems (configuration files, load balancers, networking), and validating that the new capacity performs and delivers correct results.</description></item><item><title>Demand forecasting and capacity planning</title><link>https://blog.7onn.dev/post/demand-forecasting-and-capacity-planning/</link><pubDate>Wed, 02 Feb 2022 09:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/demand-forecasting-and-capacity-planning/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
Demand forecasting and capacity planning can be viewed as ensuring that there is sufficient capacity and redundancy to serve projected future demand with the required availability. There&amp;rsquo;s nothing special about these concepts, except that a surprising number of services and teams don&amp;rsquo;t take the steps necessary to ensure that the required capacity is in place by the time it is needed.</description></item><item><title>Change management</title><link>https://blog.7onn.dev/post/change-management/</link><pubDate>Fri, 28 Jan 2022 09:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/change-management/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
Probably, &amp;gt;70% of the outages are due to changes in a live system.
Best practices in this domain are to use automation to accomplish the following:
Implementing progressive rollouts Quickly and accurately detecting problems Rolling back changes safely when problems arise This trio of practices effectively minimizes the aggregate number of users and operations exposed to harmful changes.</description></item><item><title>Emergency response</title><link>https://blog.7onn.dev/post/emergency-response/</link><pubDate>Fri, 21 Jan 2022 09:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/emergency-response/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
Reliability is a function of mean time to failure (MTTF) and mean time to repair (MTTR). The most relevant metric in evaluating the effectiveness of emergency response is how quickly the response team can bring the system back to health - that is, the MTTR.
Humans add latency. Even if a given system experiences more actual failures, a system that can avoid emergencies that require human intervention will have higher availability than a system that requires hands-on intervention.</description></item><item><title>Monitoring</title><link>https://blog.7onn.dev/post/monitoring/</link><pubDate>Fri, 14 Jan 2022 09:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/monitoring/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
Monitoring is one of the primary means by which service owners keep track of a system&amp;rsquo;s health and availability. As such, monitoring strategy should be constructed thoughtfully. A classic and common approach to monitoring is to watch for a specific value or condition, and then trigger an alert when that value is exceeded or that condition occurs.</description></item><item><title>Pursuing maximum change velocity without violating SLO</title><link>https://blog.7onn.dev/post/pursuing-maximum-change-velocity-without-violating-slo/</link><pubDate>Fri, 07 Jan 2022 10:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/pursuing-maximum-change-velocity-without-violating-slo/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
Product development and SRE teams can enjoy a productive working relationship by eliminating the structural conflict in their respective goals. The structural conflict is between the pace of innovation and product stability. This conflict often is expressed indirectly. In SRE we bring this conflict to the fore, and then resolve it with the introduction of an error budget.</description></item><item><title>Ensuring a durable focus on engineering</title><link>https://blog.7onn.dev/post/ensuring-a-durable-focus-on-engineering/</link><pubDate>Sat, 01 Jan 2022 09:00:00 -0300</pubDate><guid>https://blog.7onn.dev/post/ensuring-a-durable-focus-on-engineering/</guid><description>This following content is a transcript from Site Reliability Engineering with some, maybe none, personal adjustments.
SREs shouldn&amp;rsquo;t dedicate more than 50% of their time in operational tasks.
That being said, their remaining time should be spent using their coding skills on project work. In practice, this is accomplished by monitoring the amount of operational work being done, and redirecting excess operational work to the product development teams: reassigning bugs and tickets to development managers, [re]integrating developers into on-call pager rotations, and so on.</description></item></channel></rss>